{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charly\\\\OneDrive\\\\Documentos\\\\HACKATHONES\\\\AIlabs\\\\AI-minds\\\\react-front\\\\src\\\\components\\\\StartComponent.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StartComponent({\n  onStart\n}) {\n  _s();\n  const [name, setName] = React.useState('');\n  const [nativeLanguage, setNativeLanguage] = React.useState('');\n  const [learningLanguage, setLearningLanguage] = React.useState('');\n  const languages = ['English', 'Spanish', 'French', 'German', 'Italian', 'Chinese', 'Japanese', 'Russian', 'Portuguese', 'Norwegian', 'Swedish', 'Danish', 'Finnish'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute inset-0 flex items-center justify-center bg-white bg-opacity-50 backdrop-blur-md p-10 rounded-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col space-y-8\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setNativeLanguage(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose your native language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language,\n          children: language\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setLearningLanguage(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose the language you want to practice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language,\n          children: language\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white p-2 rounded\",\n        onClick: () => onStart({\n          name,\n          nativeLanguage,\n          learningLanguage\n        }),\n        children: \"Start practicing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(StartComponent, \"cq5XJZqVCZkEboozHz6x6FDU/ig=\");\n_c = StartComponent;\nvar _c;\n$RefreshReg$(_c, \"StartComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StartComponent","onStart","_s","name","setName","useState","nativeLanguage","setNativeLanguage","learningLanguage","setLearningLanguage","languages","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","language","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Charly/OneDrive/Documentos/HACKATHONES/AIlabs/AI-minds/react-front/src/components/StartComponent.jsx"],"sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\n\r\nexport default function StartComponent({ onStart }) {\r\n  const [name, setName] = React.useState('');\r\n  const [nativeLanguage, setNativeLanguage] = React.useState('');\r\n  const [learningLanguage, setLearningLanguage] = React.useState('');\r\n\r\n  const languages = [\r\n    'English',\r\n    'Spanish',\r\n    'French',\r\n    'German',\r\n    'Italian',\r\n    'Chinese',\r\n    'Japanese',\r\n    'Russian',\r\n    'Portuguese',\r\n    'Norwegian',\r\n    'Swedish',\r\n    'Danish',\r\n    'Finnish',\r\n  ];\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 flex items-center justify-center bg-white bg-opacity-50 backdrop-blur-md p-10 rounded-lg\">\r\n      <div className=\"flex flex-col space-y-8\"> {/* Alineaci√≥n vertical y aumento en el espaciado */}\r\n        <input type=\"text\" placeholder=\"Your name\" onChange={e => setName(e.target.value)} />\r\n        <select onChange={e => setNativeLanguage(e.target.value)}>\r\n          <option value=\"\">Choose your native language</option>\r\n          {languages.map((language, index) => (\r\n            <option key={index} value={language}>\r\n              {language}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <select onChange={e => setLearningLanguage(e.target.value)}>\r\n          <option value=\"\">Choose the language you want to practice</option>\r\n          {languages.map((language, index) => (\r\n            <option key={index} value={language}>\r\n              {language}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button className=\"bg-blue-500 text-white p-2 rounded\" onClick={() => onStart({ name, nativeLanguage, learningLanguage })}>\r\n          Start practicing\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}