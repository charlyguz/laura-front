{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charly\\\\OneDrive\\\\Documentos\\\\HACKATHONES\\\\AIlabs\\\\AI-minds\\\\react-front\\\\src\\\\components\\\\TeacherComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport teacher from '../assets/teacher.png';\nimport '../index.css';\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TeacherComponent({\n  userData\n}) {\n  _s();\n  const [responseText, setResponseText] = React.useState('');\n  const recorder = useRef(null); //Recorder\n  const audioPlayer = useRef(null); //Ref for HTML Audio tag\n  const [transcriptionText, setTranscriptionText] = useState(\"\");\n  const [blobURL, setBlobUrl] = useState(null);\n  const [isRecording, setIsRecording] = useState(null);\n  const [play, setPlay] = useState(false);\n  useEffect(() => {\n    //Declares the recorder object and stores it in ref\n    recorder.current = new MicRecorder({\n      bitRate: 128\n    });\n    setTranscriptionText('');\n  }, []);\n  const startRecording = () => {\n    //start() returns a promise incase if audio is not blocked by browser\n    recorder.current.start().then(() => {\n      setIsRecording(true);\n    });\n  };\n  const stopRecording = () => {\n    recorder.current.stop().getMp3().then(([buffer, blob]) => {\n      const newBlobUrl = URL.createObjectURL(blob); //generates url from blob\n      setBlobUrl(newBlobUrl); //refreshes the page\n      setIsRecording(false);\n      sendAudioToServer(blob);\n    }).catch(e => console.log(e));\n  };\n  const sendAudioToServer = async blob => {\n    const audioFile = new File([blob], \"audio_file\", {\n      type: \"audio/mp3\"\n    });\n    const formData = new FormData();\n    formData.append('audio', audioFile);\n    formData.append('user_name', userData.name);\n    formData.append('native_language', userData.nativeLanguage);\n    formData.append('target_language', userData.learningLanguage);\n    console.log(blob);\n    const response = await fetch('http://localhost:5000/start_conversation', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await response.json();\n    console.log(data);\n    setResponseText(data.text_response);\n    const audio = new Audio(`data:audio/wav;base64,${data.audio_response}`);\n    const transcriptionWithUserName = `${userData.name}: ${data.transcript}`;\n    setTranscriptionText(transcriptionWithUserName);\n    audio.play();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: teacher,\n      alt: \"Personaje\",\n      className: \"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-2/3 w-1/2 md:w-1/3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-0 left-0 w-full h-2/4 bg-black bg-opacity-50 p-4 rounded-t\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-6xl font-bold mb-4 text-white text-center\",\n        children: \"Hello I'am your teacher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full p-2 mb-4 h-40\",\n        readOnly: true,\n        value: responseText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          className: \"w-full p-2\",\n          placeholder: \"Introduce tu texto aqu\\xED\",\n          value: transcriptionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRecording,\n          disabled: isRecording,\n          children: \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopRecording,\n          disabled: !isRecording,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioPlayer,\n          src: blobURL,\n          controls: \"controls\",\n          onEnded: () => setPlay(false) //event handler when audio has stopped playing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n_s(TeacherComponent, \"txQO9UdcQzYVp4WX08f5xpTzRHA=\");\n_c = TeacherComponent;\nvar _c;\n$RefreshReg$(_c, \"TeacherComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","teacher","MicRecorder","jsxDEV","_jsxDEV","TeacherComponent","userData","_s","responseText","setResponseText","recorder","audioPlayer","transcriptionText","setTranscriptionText","blobURL","setBlobUrl","isRecording","setIsRecording","play","setPlay","current","bitRate","startRecording","start","then","stopRecording","stop","getMp3","buffer","blob","newBlobUrl","URL","createObjectURL","sendAudioToServer","catch","e","console","log","audioFile","File","type","formData","FormData","append","name","nativeLanguage","learningLanguage","response","fetch","method","body","data","json","text_response","audio","Audio","audio_response","transcriptionWithUserName","transcript","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","value","placeholder","onClick","disabled","ref","controls","onEnded","_c","$RefreshReg$"],"sources":["C:/Users/Charly/OneDrive/Documentos/HACKATHONES/AIlabs/AI-minds/react-front/src/components/TeacherComponent.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport teacher from '../assets/teacher.png';\r\nimport '../index.css';\r\nimport MicRecorder from 'mic-recorder-to-mp3';\r\n\r\nexport default function TeacherComponent({ userData }) {\r\n  const [responseText, setResponseText] = React.useState('');\r\n  const recorder = useRef(null); //Recorder\r\n  const audioPlayer = useRef(null); //Ref for HTML Audio tag\r\n  const [transcriptionText, setTranscriptionText] = useState(\"\");\r\n  const [blobURL, setBlobUrl] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(null);\r\n  const [play, setPlay] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //Declares the recorder object and stores it in ref\r\n    recorder.current = new MicRecorder({ bitRate: 128 });\r\n    setTranscriptionText('');\r\n  }, []);\r\n  const startRecording = () => {\r\n    //start() returns a promise incase if audio is not blocked by browser\r\n    recorder.current.start().then(() => {\r\n      setIsRecording(true);\r\n    });\r\n  };\r\n  const stopRecording = () => {\r\n    recorder.current\r\n      .stop()\r\n      .getMp3()\r\n      .then(([buffer, blob]) => {\r\n        const newBlobUrl = URL.createObjectURL(blob); //generates url from blob\r\n        setBlobUrl(newBlobUrl); //refreshes the page\r\n        setIsRecording(false);\r\n        sendAudioToServer(blob);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  const sendAudioToServer = async (blob) => {\r\n    const audioFile = new File([blob], \"audio_file\",{type: \"audio/mp3\"});\r\n    const formData = new FormData();\r\n    formData.append('audio', audioFile);\r\n    formData.append('user_name', userData.name);\r\n    formData.append('native_language', userData.nativeLanguage);\r\n    formData.append('target_language', userData.learningLanguage);\r\n    console.log(blob);\r\n    const response = await fetch('http://localhost:5000/start_conversation', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    const data = await response.json();\r\n      console.log(data);\r\n      setResponseText(data.text_response);\r\n      const audio = new Audio(`data:audio/wav;base64,${data.audio_response}`);\r\n      const transcriptionWithUserName = `${userData.name}: ${data.transcript}`;\r\n      setTranscriptionText(transcriptionWithUserName);\r\n      audio.play();\r\n    };\r\n    return (\r\n      <div className=\"\">\r\n        <img src={teacher} alt=\"Personaje\" className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-2/3 w-1/2 md:w-1/3\" />\r\n        <div className=\"absolute bottom-0 left-0 w-full h-2/4 bg-black bg-opacity-50 p-4 rounded-t\">\r\n          <h1 className=\"text-6xl font-bold mb-4 text-white text-center\">Hello I'am your teacher</h1>\r\n          <textarea className=\"w-full p-2 mb-4 h-40\" readOnly value={responseText} />\r\n          <div className=\"flex space-x-4\">\r\n          <textarea type=\"text\" className=\"w-full p-2\" placeholder=\"Introduce tu texto aquÃ­\" value={transcriptionText}/>\r\n          <button onClick={startRecording} disabled={isRecording}>\r\n            Record\r\n          </button>\r\n          <button onClick={stopRecording} disabled={!isRecording}>\r\n            Stop\r\n          </button>\r\n          <audio\r\n            ref={audioPlayer}\r\n            src={blobURL}\r\n            controls=\"controls\"\r\n            onEnded={() => setPlay(false)} //event handler when audio has stopped playing\r\n          />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}